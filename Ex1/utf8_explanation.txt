תשובה לשאלה 1 - שלמה שץ 316093202

קידוד UTF8 הומצא כדי לתת מענה בנוגע לנושא שקידוד ASCII הנפוץ לא עמד בו - ריבוי התווים והשפות מעבר לשפה האנגלית.
בניגוד לASCII, אשר כל תו בו מוכל בתוך Byte אחד(יש בסה"כ 2 בחזקת 7 אפשרויות, כלומר 7 ביטים, כשהשמיני משמש לזיהוי בעיות בתשדורת), קידוד UTF8 עובר
את גודל זה, והתוים שבו נעים בגודל של 2-4 בתים ואף יכולים להגיע לגודל של 6 בתים(נכון להיום, משתמשים בעד ארבעה בתים, ולכן מס' התוים הוא בהתאמה 2 בחזקת 32!).
כמובן, ASCII לא נותרה מאחור לחלוטין, וכדי לאפשר תמיכה לאחור, 128 הביטים הראשונים בUTF8 תואמים לקידוד ASCII(כאשר הביטים הנותרים מושלמים עם אפסים).
קידוד זה אינו מושפע מאינדיאניות(הוא נקרא כסטרים, בייט אחר בייט, לפי אלגוריתם ספציפי, ואינו קשור כלל לארכיטקטורת המעבד).
היתרונות של קידוד זה מגוונים:
ראשית, כמובן, הרוחביות שלו. בקידוד זה ניתן להכניס כמות עצומה של תוים שונים ומגוונים, מה שמאפשר ייצוג של תוים מיוחדים שלא יכלו להיות מיוצגים עד כה.
שנית, כיוון שהוא מכיל בתוכו את השפה האנגלית ואת קידוד ASCII, אין צורך בכפילויות של קבצים או המרות של קבצים ישנים.
בנוסף, הקידוד נוצר בצורה כזו שהתוים בהם משתמשים הכי הרבה קיבלו קידוד קצר יותר, וכך חסכו עבודה והגבירו יעילות.

אציג כעת 3 דוגמאות של קידודים ואסביר על כל אחת מהן:
1. התו 'a': התו הנ"ל תואם לקידוד הASCII שלו כיוון שהוא בגודל של בייט אחד, ולכן, כמו בASCII, הקידוד שלו הוא 0x61(97 בעשרוני).
2. התו 'Ñ': התו הנ"ל(N גדולה עם טילדה מעליה) הוא בגודל של שני בתים, הקידוד שלו הוא 0xC3 91 בהקסדצימלי של UTF8(בעשרוני המספר הוא 209, ובהקסדצימלי רגיל 0xD1).
3. התו '鴅': התו הנ"ל הוא בגודל של שלושה בתים, הקידוד שלו הוא 0xE9 B4 85 בהקסדצימלי של UTF8(בעשרוני המספר הוא 40,197 ובהקסדצימלי רגיל 0x9D05).

שוב, ניתן לראות את הגיוון שהקידוד מאפשר - הרבה יותר מאשר הקידוד הקיים בASCII.